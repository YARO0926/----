컴사데

1주차

자료: 생활에서 관측이나 측정을 통해 얻을 수 있는 문자, 그림, 숫자 등의 값에 해당됨
정보: 관찰이나 측정을 통하여 수집한 자료를 실제 문제에 도움이 될 수 있도록 가공한 자원
정보 혁명:지식과 정보가 가공되어 축적 및 공유할 수 있는 사회
유비쿼터스 혁명: 언제 어디서나 편리하게 컴퓨팅 자원 활용할 수 있는 지식기반사회 도래

정보검색방법의 변화

공공장소에 설치된 터치스크린 방식의 정보 전달 시스템
컴퓨터와 인터넷을 잘 모르는 사용자도 터지만으로 원하는 정보를 편리하게 검색

교통의 변화
자율주행자동차
운전자의 조작 없이 자동차 스스로 주행환경을 인식하여 목표지점까지 운행하는 무인 자동차

핀테크: 금융과 기술의 합성어로 금융과 IT 융합을 통한 금융 서비스의 혁신을 가져옴
결제, 대출, 보험, 외환송금, 증권투자 등 모든 금용 서비스에 활용 가능

생명 과학 발전을 촉진하는 SW
인간게놈프로젝트(Human Genome Project)는 컴퓨터 기술의 발전으로 사람의 유전자 분석에 소요되는 시간과 비용을 줄일 수 있었음
컴퓨터가 유전자 치료, 게놈 스캐닝 등 바이오 의약의 혁신을 가져옴
MRI 촬영, 초음파 검사, 레이저 수술 및 진료 정보 관리에 컴퓨터 이용
통신과 컴퓨팅 기술이 로봇 기술에 접목되어 로봇의 기능과 형태가 획기적으로 진화됨

교육 발전을 촉진하는 SW
인터넷 간의, 강의 자료를 게시판에 올려 공유하는 등 교육 분야에 활용

디지털 사회의 시민의식
디지털 사회의 구성원 대부분이 사이버공간 속 의사소통의 기회가 증대되면서 사이버공간은 우리 생활의 모든 분야에 영향을 미치고 있으며 여기에는 순기능도 있지만 그에 따른 역기능도 확대되어 다양한 사회 문제가 발생되고 있음


2주차

컴퓨팅 사고력: 컴퓨팅의 기본 개념과 원리를 바탕으로 복잡한 문제를 효율적으로 해결할 수 있는 사고 능력
자료수집->자료분석->구조화->추상화->알고리즘

문제 해결 방법에 대한 사고 과정

변재co단추
분캐조경al

기본 3R( 읽기: Reading, 쓰기: wRiting, 계산하기: aRithmetic)
Computational Thinking을 배우고 학습해야 한다고 주장

컴퓨팅 사고의 능력
문제 해결을 위해 컴퓨팅 기기를 활용하여 데이터를 논리적으로 조직하고 추상화를 통해 표현하고 알고리즘적 사고를 통해 해결과정의 자동화를 수행 할 수 있는 능력

Computational Thinking을 개념화한 J. Wing 박사 제시 10가지 사고 능력
변환적 사고력, 재귀적 사고력, Code적 사고력, 단순화 사고력, 추상화 사고력, 분해적 사고력, 캐시적 사고력, 조정적 사고력, 경험적 추론 사고력, 알고리즘적 사고력

컴퓨팅 사고를 위한 변환적 사고력
Reformulating Thinking
처음 접하는 어려운 문제를 자신이 이미 알고 있던 문제의 형태로 변환하여 문제를 해결 할 수 있는 사고력

컴퓨팅 사고를 위한 재귀적 사고력
Recursive Thinking
문제를 해결할 때 하나의 사고과정을 재귀적으로 반복해서 사고하는 능력

컴퓨팅 사고를 위한 Code적 사고력
Data as code, code as data
생각하는 것들을 문자, 숫자, 기호, 수신호 등으로 기고화 시켜서 코드로 표현할 수 있는 사고 능력

컴퓨팅 사고를 위한 단순화 사고력
Simplicity
내가 알고 있는 개념을 이용해 무제를 간단하고 명료하게 설계할 수 있는 사고력

컴퓨팅 사고를 위한  추상화 사고력
Abstraction
어떠한 현상들을 이론적으로 표현할 수 있는 사고능력
일반화 시킬 수 있는 사고력

컴퓨팅 사고를 위한 분해적 사고력
Decomposition
작은 조각으로 문제를 쪼개서 해결할 수 있는 사고 능력

컴퓨팅 사고를 위한 캐시적 사고력
Perfetching and caching
정보나 도구를 효율적으로 나누어 배치하여 문제해결을 쉽게 할 수 있는 사고 능력
필요한 것을 미리 선택하고 해결 방법을 예측

컴퓨팅 사고를 위한 조정적 사고력
Resource Sharing
Deadlock 상황에서의 해결 능력
공유 자원을 효율적으로 나누어 사용할 수 있는 사고 능력

컴퓨팅 사고를 위한 경험적 추론 사고력
Heuristic reasoning 주어진 문제를 해결하기 위해 추론을 할 경우 자신을의 경험을 통해 알고 있는 일부 정보를 이용해서 문제를 해결할 수 있느 ㄴ사고능력
귀납법적 접근

컴퓨팅 사고를 위한 알고리즘적 사고력
Algorithmic Thinking
단계별 절차를 통하여 문제를 해결


수분표 분추알 자시병

CSTA( Computer Science Teachers Association) 와 ISTE( International Society for Tecnology in Education)이 제시한 문제해결과정의 9가지 핵심요소
자료수집(Data Collection): 문제의 이해와 분석을 토대로 문제르 ㄹ해결하기 위한 자료 수집 단계
자료 분석(Data Analysis): 수집된 자료와 문제에 주어진 자료를 세심히 분류하고 분석하는 단계
자료 표현(Data Representation): 문제의 자료 내용을 그대로 그래프, 차트, 단어, 이미지 등으로 표현하는 단계
문제 분해(Problem Decomposition): 문제를 해결해 나가기 위하여 문제를 나누어 분석하는 단계
추상화(Abstraction): 문제의 복잡도를 줄이기 위해 기본 주요 개념의 정의를 설정하는 단계
알고리즘과 절차(Algorithm&Procedures): 지금까지 문제를 해결하기 위한 과정을 순서적 단계로 표현하는 단계
자동화(Automation): 순서적으로 나열하고 표현한 내용을 컴퓨팅 기기를 이용하요 해결과정의 최선책을 선택하는 단계
시뮬레이션(Simulation): 복잡하고 어려운 해결책이나 현실적으로 실행이 불가능한 해결책을 선택하기 위한 모의 실험 단계
병렬화(Parallelization): 문제를 해결하기 위한 공동의 목표를 달성하기 위한 작업을 수행하는 단계

문제인식
패턴 분석
추상화
알고리즘


3주차

문제 해결
문제 해결은 주어진 현재상황에서 목표 상태에 도달하기 위해 행하는 인지적 처리
문제 해결 과정
1.문제 인식
2.문제를 해결 가능한 형태로 재정의
3.해결책 또는 해결을 위한 방법 제시
4.결과 검토
->주어진 처음 상태와 목표 상태의 차이를 줄이기 위해 여러가지 시도를 하는 과정 혹은 탐색하는 과정을 말함

문제 분석
문제의 요구 사항: 해결하고자 하는 것은 무엇인가?
문제에서 제시하는 정보(자료)는 무엇인가?
문제를 해결하기 위해 필요한 자료나 정보는 무엇인가?
문제에서 제시한 조건은 무엇인가?
제시된 조건은 만족될 수 있는가?
제시된 조건이 미지의 것을 결정하깅 충분한가?


4주차

소프트웨어: 하드웨어를 관리하고 동작시켜서 사용자가 원하는 작업을 할 수 있도록 하는 명령어들의 모임

소프트웨어의 종류

시스템 소프트웨어 운영체제(OS: Operating System)
컴퓨터가 켜지면 자체적으로 작동 시작
사용자가 컴퓨터를 효율적으로 사용할 수 있도록 사용자와 컴퓨터의 중간역할

응용 소프트웨어(Application)
사용자가 컴퓨터를 이용하여 특정한 작업을 수행할 수 있도록 도와주는 소프트웨어
시스템 소프트웨어의 지원이 있어야 실행됨

알고리즘: 어떠한 주어진 문제를 해결하기 위한 절차적 순서나 방법을 의미함
알고리즘은 현재 상태와 목표 상태의 차이를 해결하기 위한 과정을 나열하는 것으로, 문제해결의 과정을 절차적-순차적으로 표현하는 것
알고리즘의 포함 내용
입력에 대한 정의
출력에 대한 명시
입력 받은 데이터로 사용자가 원하는 출력을 제공하기 위한 처리과정을 기술

입력: 외부에서 제공하는 0개 이상의 입력이 존재
출력: 1개 이상의 입력이 존재
명백성: 각 명령어의 의미는 모호하지 않고 명확할 것
유한성: 한정된 수의 명령어가 실행된 후에는 반드시 종료될 것
유효성: 각 명령어들은 실행 가능한 연산일 것

자연어(Natural Language)
한글이나 영어 사용
자연어의 모호성에 의하여 명확성 유지의 어려움

순서도(Flowchart)
사용자끼리 약속된 기호와 그림을 통해 알고리즘을 표현하는 방법
규모가 큰 문제에 대해서 코딩의 어려움

의사코드(Pseudo code)
프로그래밍 언어에 가까우며 특정 언어의 구조에 제약을 받지 않음
실행을 위해서는 프로그래밍 언어로 코딩 해야 함

자연어 표현 방법
읽는 사람에 따라서 다르게 해석될 수 있으므로 최대한 명료하게 표현해야함

의사코드 표현방법:
일반적인 언어를 프로그래밍 언어처럼 나열하는 방법
자연어와 프로그래밍 언어의 중간에 해당
특정 프로그래밍 언어에 대한 지식이 없어도 자유롭고 알기 쉬운 표현이 가능

순서도 표현 방법:
미리 약속된 기호를 사용하여 순서대로 일관성 있게 알고리즘을 표현하는 방법

주어진 문제를 해결하기 위한 알고리즘은 여러가지가 존재할 수 있음
좋은 알고리즘은 우선 그 출력 결과가 100% 정확해야 할 뿐만 아니라
이를 프로그램으로 옮겨서 컴퓨터에서 실행했을 때 그 성능이 좋아야 한다
알고리즘의 성능은 시간과 공간을 기준으로 측정 알고리즘을 실행할 때 걸리는 시간이 짧고, 데이터 처리에 필요로 하는 저장공간이 작을수록 효율성이 높은 알고리즘에 해당
효율성을 뒤집어 표현하면 복잡도가 되며 복잡도가 높을수록 효율성을 저하된다.

소프트웨어 개발 단게
1.계획
2.요구분석
3.설계
4.구현
5.테스트
6.소프트웨어 사용
7.유지보수


5주차

컴퓨터 내부의 모든 데이터는 1과 0의 신호로 저장, 전송, 처리된다
컴퓨터는 모든 데이터를 숫자로 바꾸어 처리한다

컴퓨터의 이미지 표현
0과 1로 변환한다
0을 흰색, 1을 검정색

컴퓨터의 소리 표현
0과 1로 변환함
아날로그 신호는 샘플링을 거쳐 디지털 데이터로 만듬
표본화: 원본 소리의 아날로그 파형을 일정한 시간 간격으로 나누고 신호값을 추출함
양자화: 추출한 측정 값과 가장 가까운 정수를 구함
부호화: 양자화의 결과로 얻은 정수 값을 이진수로 변환하여 디지털 소리로 변환함














